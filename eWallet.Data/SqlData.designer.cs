#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eWallet.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="eWallet")]
	public partial class SqlDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertservice_provider(service_provider instance);
    partial void Updateservice_provider(service_provider instance);
    partial void Deleteservice_provider(service_provider instance);
    partial void Insertbranch(branch instance);
    partial void Updatebranch(branch instance);
    partial void Deletebranch(branch instance);
    partial void Insertfinance_account(finance_account instance);
    partial void Updatefinance_account(finance_account instance);
    partial void Deletefinance_account(finance_account instance);
    partial void Insertfinance_account_category(finance_account_category instance);
    partial void Updatefinance_account_category(finance_account_category instance);
    partial void Deletefinance_account_category(finance_account_category instance);
    partial void Insertfinance_account_currency(finance_account_currency instance);
    partial void Updatefinance_account_currency(finance_account_currency instance);
    partial void Deletefinance_account_currency(finance_account_currency instance);
    partial void Insertfinance_account_role(finance_account_role instance);
    partial void Updatefinance_account_role(finance_account_role instance);
    partial void Deletefinance_account_role(finance_account_role instance);
    partial void Insertfinance_transaction(finance_transaction instance);
    partial void Updatefinance_transaction(finance_transaction instance);
    partial void Deletefinance_transaction(finance_transaction instance);
    partial void Insertfinance_transaction_detail(finance_transaction_detail instance);
    partial void Updatefinance_transaction_detail(finance_transaction_detail instance);
    partial void Deletefinance_transaction_detail(finance_transaction_detail instance);
    partial void Insertprofile(profile instance);
    partial void Updateprofile(profile instance);
    partial void Deleteprofile(profile instance);
    partial void Insertservice(service instance);
    partial void Updateservice(service instance);
    partial void Deleteservice(service instance);
    #endregion
		
		public SqlDataDataContext() : 
				base(global::eWallet.Data.Properties.Settings.Default.eWalletConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<service_provider> service_providers
		{
			get
			{
				return this.GetTable<service_provider>();
			}
		}
		
		public System.Data.Linq.Table<branch> branches
		{
			get
			{
				return this.GetTable<branch>();
			}
		}
		
		public System.Data.Linq.Table<finance_account> finance_accounts
		{
			get
			{
				return this.GetTable<finance_account>();
			}
		}
		
		public System.Data.Linq.Table<finance_account_category> finance_account_categories
		{
			get
			{
				return this.GetTable<finance_account_category>();
			}
		}
		
		public System.Data.Linq.Table<finance_account_currency> finance_account_currencies
		{
			get
			{
				return this.GetTable<finance_account_currency>();
			}
		}
		
		public System.Data.Linq.Table<finance_account_role> finance_account_roles
		{
			get
			{
				return this.GetTable<finance_account_role>();
			}
		}
		
		public System.Data.Linq.Table<finance_transaction> finance_transactions
		{
			get
			{
				return this.GetTable<finance_transaction>();
			}
		}
		
		public System.Data.Linq.Table<finance_transaction_detail> finance_transaction_details
		{
			get
			{
				return this.GetTable<finance_transaction_detail>();
			}
		}
		
		public System.Data.Linq.Table<profile> profiles
		{
			get
			{
				return this.GetTable<profile>();
			}
		}
		
		public System.Data.Linq.Table<service> services
		{
			get
			{
				return this.GetTable<service>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.service_provider")]
	public partial class service_provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _service;
		
		private string _name;
		
		private string _query_type;
		
		private string _payment_type;
		
		private bool _active;
		
		private EntityRef<service> _service1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnserviceChanging(string value);
    partial void OnserviceChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onquery_typeChanging(string value);
    partial void Onquery_typeChanged();
    partial void Onpayment_typeChanging(string value);
    partial void Onpayment_typeChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public service_provider()
		{
			this._service1 = default(EntityRef<service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					if (this._service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceChanging(value);
					this.SendPropertyChanging();
					this._service = value;
					this.SendPropertyChanged("service");
					this.OnserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_query_type", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string query_type
		{
			get
			{
				return this._query_type;
			}
			set
			{
				if ((this._query_type != value))
				{
					this.Onquery_typeChanging(value);
					this.SendPropertyChanging();
					this._query_type = value;
					this.SendPropertyChanged("query_type");
					this.Onquery_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string payment_type
		{
			get
			{
				return this._payment_type;
			}
			set
			{
				if ((this._payment_type != value))
				{
					this.Onpayment_typeChanging(value);
					this.SendPropertyChanging();
					this._payment_type = value;
					this.SendPropertyChanged("payment_type");
					this.Onpayment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_service_provider", Storage="_service1", ThisKey="service", OtherKey="id", IsForeignKey=true)]
		public service service1
		{
			get
			{
				return this._service1.Entity;
			}
			set
			{
				service previousValue = this._service1.Entity;
				if (((previousValue != value) 
							|| (this._service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._service1.Entity = null;
						previousValue.service_providers.Remove(this);
					}
					this._service1.Entity = value;
					if ((value != null))
					{
						value.service_providers.Add(this);
						this._service = value.id;
					}
					else
					{
						this._service = default(string);
					}
					this.SendPropertyChanged("service1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.branch")]
	public partial class branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _full_name;
		
		private string _address1;
		
		private string _address2;
		
		private string _city;
		
		private System.Nullable<int> _district_id;
		
		private System.Nullable<int> _provine_id;
		
		private string _tel;
		
		private string _fax;
		
		private EntitySet<finance_account> _finance_accounts;
		
		private EntitySet<finance_transaction> _finance_transactions;
		
		private EntitySet<profile> _profiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Ondistrict_idChanging(System.Nullable<int> value);
    partial void Ondistrict_idChanged();
    partial void Onprovine_idChanging(System.Nullable<int> value);
    partial void Onprovine_idChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    #endregion
		
		public branch()
		{
			this._finance_accounts = new EntitySet<finance_account>(new Action<finance_account>(this.attach_finance_accounts), new Action<finance_account>(this.detach_finance_accounts));
			this._finance_transactions = new EntitySet<finance_transaction>(new Action<finance_transaction>(this.attach_finance_transactions), new Action<finance_transaction>(this.detach_finance_transactions));
			this._profiles = new EntitySet<profile>(new Action<profile>(this.attach_profiles), new Action<profile>(this.detach_profiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address1", DbType="NVarChar(100)")]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="NVarChar(100)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_id", DbType="Int")]
		public System.Nullable<int> district_id
		{
			get
			{
				return this._district_id;
			}
			set
			{
				if ((this._district_id != value))
				{
					this.Ondistrict_idChanging(value);
					this.SendPropertyChanging();
					this._district_id = value;
					this.SendPropertyChanged("district_id");
					this.Ondistrict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provine_id", DbType="Int")]
		public System.Nullable<int> provine_id
		{
			get
			{
				return this._provine_id;
			}
			set
			{
				if ((this._provine_id != value))
				{
					this.Onprovine_idChanging(value);
					this.SendPropertyChanging();
					this._provine_id = value;
					this.SendPropertyChanged("provine_id");
					this.Onprovine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(16)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(16)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_finance_account", Storage="_finance_accounts", ThisKey="id", OtherKey="branch")]
		public EntitySet<finance_account> finance_accounts
		{
			get
			{
				return this._finance_accounts;
			}
			set
			{
				this._finance_accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_finance_transaction", Storage="_finance_transactions", ThisKey="id", OtherKey="branch")]
		public EntitySet<finance_transaction> finance_transactions
		{
			get
			{
				return this._finance_transactions;
			}
			set
			{
				this._finance_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_profile", Storage="_profiles", ThisKey="id", OtherKey="branch")]
		public EntitySet<profile> profiles
		{
			get
			{
				return this._profiles;
			}
			set
			{
				this._profiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_finance_accounts(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = this;
		}
		
		private void detach_finance_accounts(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = null;
		}
		
		private void attach_finance_transactions(finance_transaction entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = this;
		}
		
		private void detach_finance_transactions(finance_transaction entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = null;
		}
		
		private void attach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = this;
		}
		
		private void detach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.branch1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_account")]
	public partial class finance_account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _account_category;
		
		private string _branch;
		
		private decimal _current_balance;
		
		private decimal _credit_today;
		
		private decimal _debit_today;
		
		private decimal _credit_current_month;
		
		private decimal _debit_current_month;
		
		private EntitySet<finance_transaction_detail> _finance_transaction_details;
		
		private EntitySet<profile> _profiles;
		
		private EntityRef<branch> _branch1;
		
		private EntityRef<finance_account_category> _finance_account_category;
		
		private EntityRef<finance_account_category> _finance_account_category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onaccount_categoryChanging(string value);
    partial void Onaccount_categoryChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void Oncurrent_balanceChanging(decimal value);
    partial void Oncurrent_balanceChanged();
    partial void Oncredit_todayChanging(decimal value);
    partial void Oncredit_todayChanged();
    partial void Ondebit_todayChanging(decimal value);
    partial void Ondebit_todayChanged();
    partial void Oncredit_current_monthChanging(decimal value);
    partial void Oncredit_current_monthChanged();
    partial void Ondebit_current_monthChanging(decimal value);
    partial void Ondebit_current_monthChanged();
    #endregion
		
		public finance_account()
		{
			this._finance_transaction_details = new EntitySet<finance_transaction_detail>(new Action<finance_transaction_detail>(this.attach_finance_transaction_details), new Action<finance_transaction_detail>(this.detach_finance_transaction_details));
			this._profiles = new EntitySet<profile>(new Action<profile>(this.attach_profiles), new Action<profile>(this.detach_profiles));
			this._branch1 = default(EntityRef<branch>);
			this._finance_account_category = default(EntityRef<finance_account_category>);
			this._finance_account_category1 = default(EntityRef<finance_account_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_category", DbType="VarChar(12)")]
		public string account_category
		{
			get
			{
				return this._account_category;
			}
			set
			{
				if ((this._account_category != value))
				{
					if ((this._finance_account_category.HasLoadedOrAssignedValue || this._finance_account_category1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_categoryChanging(value);
					this.SendPropertyChanging();
					this._account_category = value;
					this.SendPropertyChanged("account_category");
					this.Onaccount_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_balance", DbType="Decimal(18,0) NOT NULL")]
		public decimal current_balance
		{
			get
			{
				return this._current_balance;
			}
			set
			{
				if ((this._current_balance != value))
				{
					this.Oncurrent_balanceChanging(value);
					this.SendPropertyChanging();
					this._current_balance = value;
					this.SendPropertyChanged("current_balance");
					this.Oncurrent_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_today", DbType="Decimal(18,0) NOT NULL")]
		public decimal credit_today
		{
			get
			{
				return this._credit_today;
			}
			set
			{
				if ((this._credit_today != value))
				{
					this.Oncredit_todayChanging(value);
					this.SendPropertyChanging();
					this._credit_today = value;
					this.SendPropertyChanged("credit_today");
					this.Oncredit_todayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debit_today", DbType="Decimal(18,0) NOT NULL")]
		public decimal debit_today
		{
			get
			{
				return this._debit_today;
			}
			set
			{
				if ((this._debit_today != value))
				{
					this.Ondebit_todayChanging(value);
					this.SendPropertyChanging();
					this._debit_today = value;
					this.SendPropertyChanged("debit_today");
					this.Ondebit_todayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_current_month", DbType="Decimal(18,0) NOT NULL")]
		public decimal credit_current_month
		{
			get
			{
				return this._credit_current_month;
			}
			set
			{
				if ((this._credit_current_month != value))
				{
					this.Oncredit_current_monthChanging(value);
					this.SendPropertyChanging();
					this._credit_current_month = value;
					this.SendPropertyChanged("credit_current_month");
					this.Oncredit_current_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debit_current_month", DbType="Decimal(18,0) NOT NULL")]
		public decimal debit_current_month
		{
			get
			{
				return this._debit_current_month;
			}
			set
			{
				if ((this._debit_current_month != value))
				{
					this.Ondebit_current_monthChanging(value);
					this.SendPropertyChanging();
					this._debit_current_month = value;
					this.SendPropertyChanged("debit_current_month");
					this.Ondebit_current_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_finance_transaction_detail", Storage="_finance_transaction_details", ThisKey="id", OtherKey="account")]
		public EntitySet<finance_transaction_detail> finance_transaction_details
		{
			get
			{
				return this._finance_transaction_details;
			}
			set
			{
				this._finance_transaction_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_profile", Storage="_profiles", ThisKey="id", OtherKey="finance_account")]
		public EntitySet<profile> profiles
		{
			get
			{
				return this._profiles;
			}
			set
			{
				this._profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_finance_account", Storage="_branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public branch branch1
		{
			get
			{
				return this._branch1.Entity;
			}
			set
			{
				branch previousValue = this._branch1.Entity;
				if (((previousValue != value) 
							|| (this._branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._branch1.Entity = null;
						previousValue.finance_accounts.Remove(this);
					}
					this._branch1.Entity = value;
					if ((value != null))
					{
						value.finance_accounts.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(string);
					}
					this.SendPropertyChanged("branch1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_category_finance_account", Storage="_finance_account_category", ThisKey="account_category", OtherKey="id", IsForeignKey=true)]
		public finance_account_category finance_account_category
		{
			get
			{
				return this._finance_account_category.Entity;
			}
			set
			{
				finance_account_category previousValue = this._finance_account_category.Entity;
				if (((previousValue != value) 
							|| (this._finance_account_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._finance_account_category.Entity = null;
						previousValue.finance_accounts.Remove(this);
					}
					this._finance_account_category.Entity = value;
					if ((value != null))
					{
						value.finance_accounts.Add(this);
						this._account_category = value.id;
					}
					else
					{
						this._account_category = default(string);
					}
					this.SendPropertyChanged("finance_account_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_category_finance_account1", Storage="_finance_account_category1", ThisKey="account_category", OtherKey="id", IsForeignKey=true)]
		public finance_account_category finance_account_category1
		{
			get
			{
				return this._finance_account_category1.Entity;
			}
			set
			{
				finance_account_category previousValue = this._finance_account_category1.Entity;
				if (((previousValue != value) 
							|| (this._finance_account_category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._finance_account_category1.Entity = null;
						previousValue.finance_accounts1.Remove(this);
					}
					this._finance_account_category1.Entity = value;
					if ((value != null))
					{
						value.finance_accounts1.Add(this);
						this._account_category = value.id;
					}
					else
					{
						this._account_category = default(string);
					}
					this.SendPropertyChanged("finance_account_category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_finance_transaction_details(finance_transaction_detail entity)
		{
			this.SendPropertyChanging();
			entity.finance_account = this;
		}
		
		private void detach_finance_transaction_details(finance_transaction_detail entity)
		{
			this.SendPropertyChanging();
			entity.finance_account = null;
		}
		
		private void attach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.finance_account1 = this;
		}
		
		private void detach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.finance_account1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_account_category")]
	public partial class finance_account_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private EntitySet<finance_account> _finance_accounts;
		
		private EntitySet<finance_account> _finance_accounts1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public finance_account_category()
		{
			this._finance_accounts = new EntitySet<finance_account>(new Action<finance_account>(this.attach_finance_accounts), new Action<finance_account>(this.detach_finance_accounts));
			this._finance_accounts1 = new EntitySet<finance_account>(new Action<finance_account>(this.attach_finance_accounts1), new Action<finance_account>(this.detach_finance_accounts1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_category_finance_account", Storage="_finance_accounts", ThisKey="id", OtherKey="account_category")]
		public EntitySet<finance_account> finance_accounts
		{
			get
			{
				return this._finance_accounts;
			}
			set
			{
				this._finance_accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_category_finance_account1", Storage="_finance_accounts1", ThisKey="id", OtherKey="account_category")]
		public EntitySet<finance_account> finance_accounts1
		{
			get
			{
				return this._finance_accounts1;
			}
			set
			{
				this._finance_accounts1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_finance_accounts(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.finance_account_category = this;
		}
		
		private void detach_finance_accounts(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.finance_account_category = null;
		}
		
		private void attach_finance_accounts1(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.finance_account_category1 = this;
		}
		
		private void detach_finance_accounts1(finance_account entity)
		{
			this.SendPropertyChanging();
			entity.finance_account_category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_account_currency")]
	public partial class finance_account_currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public finance_account_currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_account_roles")]
	public partial class finance_account_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id;
		
		private string _name;
		
		private string _account;
		
		private string _type;
		
		private string _operator;
		
		private decimal _value;
		
		private int _seq;
		
		private bool _active;
		
		private System.DateTime _actived_time;
		
		private System.DateTime _created_time;
		
		private System.DateTime _last_updated_time;
		
		private string _created_by;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(decimal value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnoperatorChanging(string value);
    partial void OnoperatorChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void OnseqChanging(int value);
    partial void OnseqChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onactived_timeChanging(System.DateTime value);
    partial void Onactived_timeChanged();
    partial void Oncreated_timeChanging(System.DateTime value);
    partial void Oncreated_timeChanged();
    partial void Onlast_updated_timeChanging(System.DateTime value);
    partial void Onlast_updated_timeChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    #endregion
		
		public finance_account_role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="operator", Storage="_operator", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string @operator
		{
			get
			{
				return this._operator;
			}
			set
			{
				if ((this._operator != value))
				{
					this.OnoperatorChanging(value);
					this.SendPropertyChanging();
					this._operator = value;
					this.SendPropertyChanged("@operator");
					this.OnoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(18,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq", DbType="Int NOT NULL")]
		public int seq
		{
			get
			{
				return this._seq;
			}
			set
			{
				if ((this._seq != value))
				{
					this.OnseqChanging(value);
					this.SendPropertyChanging();
					this._seq = value;
					this.SendPropertyChanged("seq");
					this.OnseqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actived_time", DbType="DateTime NOT NULL")]
		public System.DateTime actived_time
		{
			get
			{
				return this._actived_time;
			}
			set
			{
				if ((this._actived_time != value))
				{
					this.Onactived_timeChanging(value);
					this.SendPropertyChanging();
					this._actived_time = value;
					this.SendPropertyChanged("actived_time");
					this.Onactived_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime NOT NULL")]
		public System.DateTime created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_updated_time
		{
			get
			{
				return this._last_updated_time;
			}
			set
			{
				if ((this._last_updated_time != value))
				{
					this.Onlast_updated_timeChanging(value);
					this.SendPropertyChanging();
					this._last_updated_time = value;
					this.SendPropertyChanged("last_updated_time");
					this.Onlast_updated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_transaction")]
	public partial class finance_transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _reference_id;
		
		private System.DateTime _transaction_time;
		
		private string _branch;
		
		private string _transaction_code;
		
		private string _description;
		
		private bool _allow_reverse;
		
		private string _day_period;
		
		private string _month_period;
		
		private string _year_period;
		
		private string _status;
		
		private EntitySet<finance_transaction_detail> _finance_transaction_details;
		
		private EntityRef<branch> _branch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onreference_idChanging(string value);
    partial void Onreference_idChanged();
    partial void Ontransaction_timeChanging(System.DateTime value);
    partial void Ontransaction_timeChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void Ontransaction_codeChanging(string value);
    partial void Ontransaction_codeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onallow_reverseChanging(bool value);
    partial void Onallow_reverseChanged();
    partial void Onday_periodChanging(string value);
    partial void Onday_periodChanged();
    partial void Onmonth_periodChanging(string value);
    partial void Onmonth_periodChanged();
    partial void Onyear_periodChanging(string value);
    partial void Onyear_periodChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public finance_transaction()
		{
			this._finance_transaction_details = new EntitySet<finance_transaction_detail>(new Action<finance_transaction_detail>(this.attach_finance_transaction_details), new Action<finance_transaction_detail>(this.detach_finance_transaction_details));
			this._branch1 = default(EntityRef<branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference_id", DbType="VarChar(32)")]
		public string reference_id
		{
			get
			{
				return this._reference_id;
			}
			set
			{
				if ((this._reference_id != value))
				{
					this.Onreference_idChanging(value);
					this.SendPropertyChanging();
					this._reference_id = value;
					this.SendPropertyChanged("reference_id");
					this.Onreference_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_time", DbType="DateTime NOT NULL")]
		public System.DateTime transaction_time
		{
			get
			{
				return this._transaction_time;
			}
			set
			{
				if ((this._transaction_time != value))
				{
					this.Ontransaction_timeChanging(value);
					this.SendPropertyChanging();
					this._transaction_time = value;
					this.SendPropertyChanged("transaction_time");
					this.Ontransaction_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_code", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string transaction_code
		{
			get
			{
				return this._transaction_code;
			}
			set
			{
				if ((this._transaction_code != value))
				{
					this.Ontransaction_codeChanging(value);
					this.SendPropertyChanging();
					this._transaction_code = value;
					this.SendPropertyChanged("transaction_code");
					this.Ontransaction_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allow_reverse", DbType="Bit NOT NULL")]
		public bool allow_reverse
		{
			get
			{
				return this._allow_reverse;
			}
			set
			{
				if ((this._allow_reverse != value))
				{
					this.Onallow_reverseChanging(value);
					this.SendPropertyChanging();
					this._allow_reverse = value;
					this.SendPropertyChanged("allow_reverse");
					this.Onallow_reverseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day_period", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string day_period
		{
			get
			{
				return this._day_period;
			}
			set
			{
				if ((this._day_period != value))
				{
					this.Onday_periodChanging(value);
					this.SendPropertyChanging();
					this._day_period = value;
					this.SendPropertyChanged("day_period");
					this.Onday_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month_period", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string month_period
		{
			get
			{
				return this._month_period;
			}
			set
			{
				if ((this._month_period != value))
				{
					this.Onmonth_periodChanging(value);
					this.SendPropertyChanging();
					this._month_period = value;
					this.SendPropertyChanged("month_period");
					this.Onmonth_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_period", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string year_period
		{
			get
			{
				return this._year_period;
			}
			set
			{
				if ((this._year_period != value))
				{
					this.Onyear_periodChanging(value);
					this.SendPropertyChanging();
					this._year_period = value;
					this.SendPropertyChanged("year_period");
					this.Onyear_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_transaction_finance_transaction_detail", Storage="_finance_transaction_details", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<finance_transaction_detail> finance_transaction_details
		{
			get
			{
				return this._finance_transaction_details;
			}
			set
			{
				this._finance_transaction_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_finance_transaction", Storage="_branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public branch branch1
		{
			get
			{
				return this._branch1.Entity;
			}
			set
			{
				branch previousValue = this._branch1.Entity;
				if (((previousValue != value) 
							|| (this._branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._branch1.Entity = null;
						previousValue.finance_transactions.Remove(this);
					}
					this._branch1.Entity = value;
					if ((value != null))
					{
						value.finance_transactions.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(string);
					}
					this.SendPropertyChanged("branch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_finance_transaction_details(finance_transaction_detail entity)
		{
			this.SendPropertyChanging();
			entity.finance_transaction = this;
		}
		
		private void detach_finance_transaction_details(finance_transaction_detail entity)
		{
			this.SendPropertyChanging();
			entity.finance_transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.finance_transaction_detail")]
	public partial class finance_transaction_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _parent_id;
		
		private string _account;
		
		private decimal _debit;
		
		private decimal _credit;
		
		private decimal _balance_available;
		
		private System.DateTime _transaction_time;
		
		private string _status;
		
		private EntityRef<finance_transaction> _finance_transaction;
		
		private EntityRef<finance_account> _finance_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onparent_idChanging(string value);
    partial void Onparent_idChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OndebitChanging(decimal value);
    partial void OndebitChanged();
    partial void OncreditChanging(decimal value);
    partial void OncreditChanged();
    partial void Onbalance_availableChanging(decimal value);
    partial void Onbalance_availableChanged();
    partial void Ontransaction_timeChanging(System.DateTime value);
    partial void Ontransaction_timeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public finance_transaction_detail()
		{
			this._finance_transaction = default(EntityRef<finance_transaction>);
			this._finance_account = default(EntityRef<finance_account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._finance_transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._finance_account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debit", DbType="Decimal(18,0) NOT NULL")]
		public decimal debit
		{
			get
			{
				return this._debit;
			}
			set
			{
				if ((this._debit != value))
				{
					this.OndebitChanging(value);
					this.SendPropertyChanging();
					this._debit = value;
					this.SendPropertyChanged("debit");
					this.OndebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit", DbType="Decimal(18,0) NOT NULL")]
		public decimal credit
		{
			get
			{
				return this._credit;
			}
			set
			{
				if ((this._credit != value))
				{
					this.OncreditChanging(value);
					this.SendPropertyChanging();
					this._credit = value;
					this.SendPropertyChanged("credit");
					this.OncreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_available", DbType="Decimal(18,0) NOT NULL")]
		public decimal balance_available
		{
			get
			{
				return this._balance_available;
			}
			set
			{
				if ((this._balance_available != value))
				{
					this.Onbalance_availableChanging(value);
					this.SendPropertyChanging();
					this._balance_available = value;
					this.SendPropertyChanged("balance_available");
					this.Onbalance_availableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_time", DbType="DateTime NOT NULL")]
		public System.DateTime transaction_time
		{
			get
			{
				return this._transaction_time;
			}
			set
			{
				if ((this._transaction_time != value))
				{
					this.Ontransaction_timeChanging(value);
					this.SendPropertyChanging();
					this._transaction_time = value;
					this.SendPropertyChanged("transaction_time");
					this.Ontransaction_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_transaction_finance_transaction_detail", Storage="_finance_transaction", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public finance_transaction finance_transaction
		{
			get
			{
				return this._finance_transaction.Entity;
			}
			set
			{
				finance_transaction previousValue = this._finance_transaction.Entity;
				if (((previousValue != value) 
							|| (this._finance_transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._finance_transaction.Entity = null;
						previousValue.finance_transaction_details.Remove(this);
					}
					this._finance_transaction.Entity = value;
					if ((value != null))
					{
						value.finance_transaction_details.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(string);
					}
					this.SendPropertyChanged("finance_transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_finance_transaction_detail", Storage="_finance_account", ThisKey="account", OtherKey="id", IsForeignKey=true)]
		public finance_account finance_account
		{
			get
			{
				return this._finance_account.Entity;
			}
			set
			{
				finance_account previousValue = this._finance_account.Entity;
				if (((previousValue != value) 
							|| (this._finance_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._finance_account.Entity = null;
						previousValue.finance_transaction_details.Remove(this);
					}
					this._finance_account.Entity = value;
					if ((value != null))
					{
						value.finance_transaction_details.Add(this);
						this._account = value.id;
					}
					else
					{
						this._account = default(string);
					}
					this.SendPropertyChanged("finance_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile")]
	public partial class profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _branch;
		
		private string _profile_type;
		
		private string _full_name;
		
		private string _finance_account;
		
		private string _mobile;
		
		private string _email;
		
		private string _cert_id_number;
		
		private string _cert_id_issuer;
		
		private System.Nullable<System.DateTime> _cert_id_date;
		
		private string _cert_id_type;
		
		private string _language;
		
		private string _status;
		
		private System.DateTime _created_time;
		
		private System.Nullable<System.DateTime> _last_updated_time;
		
		private string _last_updated_by;
		
		private EntityRef<branch> _branch1;
		
		private EntityRef<finance_account> _finance_account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void Onprofile_typeChanging(string value);
    partial void Onprofile_typeChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void Onfinance_accountChanging(string value);
    partial void Onfinance_accountChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncert_id_numberChanging(string value);
    partial void Oncert_id_numberChanged();
    partial void Oncert_id_issuerChanging(string value);
    partial void Oncert_id_issuerChanged();
    partial void Oncert_id_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncert_id_dateChanged();
    partial void Oncert_id_typeChanging(string value);
    partial void Oncert_id_typeChanged();
    partial void OnlanguageChanging(string value);
    partial void OnlanguageChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_timeChanging(System.DateTime value);
    partial void Oncreated_timeChanged();
    partial void Onlast_updated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_timeChanged();
    partial void Onlast_updated_byChanging(string value);
    partial void Onlast_updated_byChanged();
    #endregion
		
		public profile()
		{
			this._branch1 = default(EntityRef<branch>);
			this._finance_account1 = default(EntityRef<finance_account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_type", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string profile_type
		{
			get
			{
				return this._profile_type;
			}
			set
			{
				if ((this._profile_type != value))
				{
					this.Onprofile_typeChanging(value);
					this.SendPropertyChanging();
					this._profile_type = value;
					this.SendPropertyChanged("profile_type");
					this.Onprofile_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finance_account", DbType="VarChar(32)")]
		public string finance_account
		{
			get
			{
				return this._finance_account;
			}
			set
			{
				if ((this._finance_account != value))
				{
					if (this._finance_account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfinance_accountChanging(value);
					this.SendPropertyChanging();
					this._finance_account = value;
					this.SendPropertyChanged("finance_account");
					this.Onfinance_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(16)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cert_id_number", DbType="VarChar(16)")]
		public string cert_id_number
		{
			get
			{
				return this._cert_id_number;
			}
			set
			{
				if ((this._cert_id_number != value))
				{
					this.Oncert_id_numberChanging(value);
					this.SendPropertyChanging();
					this._cert_id_number = value;
					this.SendPropertyChanged("cert_id_number");
					this.Oncert_id_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cert_id_issuer", DbType="NVarChar(50)")]
		public string cert_id_issuer
		{
			get
			{
				return this._cert_id_issuer;
			}
			set
			{
				if ((this._cert_id_issuer != value))
				{
					this.Oncert_id_issuerChanging(value);
					this.SendPropertyChanging();
					this._cert_id_issuer = value;
					this.SendPropertyChanged("cert_id_issuer");
					this.Oncert_id_issuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cert_id_date", DbType="Date")]
		public System.Nullable<System.DateTime> cert_id_date
		{
			get
			{
				return this._cert_id_date;
			}
			set
			{
				if ((this._cert_id_date != value))
				{
					this.Oncert_id_dateChanging(value);
					this.SendPropertyChanging();
					this._cert_id_date = value;
					this.SendPropertyChanged("cert_id_date");
					this.Oncert_id_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cert_id_type", DbType="VarChar(30)")]
		public string cert_id_type
		{
			get
			{
				return this._cert_id_type;
			}
			set
			{
				if ((this._cert_id_type != value))
				{
					this.Oncert_id_typeChanging(value);
					this.SendPropertyChanging();
					this._cert_id_type = value;
					this.SendPropertyChanged("cert_id_type");
					this.Oncert_id_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime NOT NULL")]
		public System.DateTime created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_time
		{
			get
			{
				return this._last_updated_time;
			}
			set
			{
				if ((this._last_updated_time != value))
				{
					this.Onlast_updated_timeChanging(value);
					this.SendPropertyChanging();
					this._last_updated_time = value;
					this.SendPropertyChanged("last_updated_time");
					this.Onlast_updated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_by", DbType="VarChar(50)")]
		public string last_updated_by
		{
			get
			{
				return this._last_updated_by;
			}
			set
			{
				if ((this._last_updated_by != value))
				{
					this.Onlast_updated_byChanging(value);
					this.SendPropertyChanging();
					this._last_updated_by = value;
					this.SendPropertyChanged("last_updated_by");
					this.Onlast_updated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_profile", Storage="_branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public branch branch1
		{
			get
			{
				return this._branch1.Entity;
			}
			set
			{
				branch previousValue = this._branch1.Entity;
				if (((previousValue != value) 
							|| (this._branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._branch1.Entity = null;
						previousValue.profiles.Remove(this);
					}
					this._branch1.Entity = value;
					if ((value != null))
					{
						value.profiles.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(string);
					}
					this.SendPropertyChanged("branch1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="finance_account_profile", Storage="_finance_account1", ThisKey="finance_account", OtherKey="id", IsForeignKey=true)]
		public finance_account finance_account1
		{
			get
			{
				return this._finance_account1.Entity;
			}
			set
			{
				finance_account previousValue = this._finance_account1.Entity;
				if (((previousValue != value) 
							|| (this._finance_account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._finance_account1.Entity = null;
						previousValue.profiles.Remove(this);
					}
					this._finance_account1.Entity = value;
					if ((value != null))
					{
						value.profiles.Add(this);
						this._finance_account = value.id;
					}
					else
					{
						this._finance_account = default(string);
					}
					this.SendPropertyChanged("finance_account1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.service")]
	public partial class service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private bool _active;
		
		private EntitySet<service_provider> _service_providers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public service()
		{
			this._service_providers = new EntitySet<service_provider>(new Action<service_provider>(this.attach_service_providers), new Action<service_provider>(this.detach_service_providers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_service_provider", Storage="_service_providers", ThisKey="id", OtherKey="service")]
		public EntitySet<service_provider> service_providers
		{
			get
			{
				return this._service_providers;
			}
			set
			{
				this._service_providers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_service_providers(service_provider entity)
		{
			this.SendPropertyChanging();
			entity.service1 = this;
		}
		
		private void detach_service_providers(service_provider entity)
		{
			this.SendPropertyChanging();
			entity.service1 = null;
		}
	}
}
#pragma warning restore 1591
